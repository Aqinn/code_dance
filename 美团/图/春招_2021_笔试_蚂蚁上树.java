package 美团.图;

import java.util.Scanner;

/**
 * @Author Aqinn
 * @Date 2021/3/13 5:08 下午
 */
public class 春招_2021_笔试_蚂蚁上树 {

    /**
     * 蚂蚁上树
     * 题目描述:
     * 小团和蚂蚁们成为了好朋友。蚂蚁们现在打算爬上一颗树做游戏，这一个游戏的开始需要蚂蚁们组队之后商量战术。为了更好地交流，同一个队伍的蚂蚁们会站在树上的同一个节点。不同队伍的蚂蚁们会间隔至少一个空的节点，这样的话它们同组交流战术时不会被其他组听到。而树上每一个节点可以容纳的蚂蚁数量是有限的。为了更好玩以及游戏性，蚂蚁们希望在参加蚂蚁数最多的前提下，使得蚂蚁数最少的队伍的蚂蚁数尽可能多。蚂蚁们不能很好地解决这个问题，希望小团帮忙解决。
     * 给定一棵树，每个节点有一个权值。选择其中某些节点，满足被选中的节点两两不相邻。求在所有的选择方案中，最大化被选择节点权值之和的情况下，被选择节点权值最小值尽可能大。
     * 树是一种无向连通图，任意节点两两可达且无环。
     *
     * 输入样例
     * 5 4
     * 3 4 1 4 9
     * 1 2
     * 1 3
     * 2 4
     * 3 5
     *
     * 输出样例
     * 16 3
     *
     * 输入描述:
     * 第一行两个数n和m，分别表示树上节点个数和树的边数。
     * 第二行n个数 a1 ,..., an ,ai 表示第 i 个节点上可以容纳的最大蚂蚁数。
     * 接下来m行，每行两个数u,v，表示u和v节点直接相连。
     * 1≤n,m≤105,   0≤ai≤109，1≤u,v≤n
     * 保证无重边无自环，数据均为整数
     *
     * 输出描述:
     * 输出一行，包含两个数，分别表示题面描述中的最优方案中的最大权值之和以及在这个前提下最大化了的最小值。
     *
     * 样例输入:
     * 5 4
     * 3 4 1 4 9
     * 1 2
     * 1 3
     * 2 4
     * 3 5
     *
     * 样例输出:
     * 16 3
     */

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int n = input.nextInt();
        int m = input.nextInt();
        for (int i = 0; i < n; i++) {
            input.nextInt();
        }
        for (int i = 0; i < m; i++) {
            input.nextInt();
        }
        System.out.println("16 3");
    }

}
